version: '2'
services:
  redis:
    image: redis
    volumes:
      - redis-data:/data
    networks:
      - agora-network
    
  rabbit:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - agora-network

  mongo:
    image: mongo
    networks:
      - agora-network

  core:
    image: smartdeveloperhub/agora
    environment:
      - FOUNTAIN_DB_HOST=redis
      - LOG_LEVEL=INFO
    volumes:
      - core-data:/usr/lib/agora/graph_store
    networks:
      - agora-network

  scholar:
    image: smartdeveloperhub/agora-scholar
    volumes:
      - scholar-data:/usr/lib/agora
    environment:
      - API_PORT=5010
      - AMQP_HOST=rabbit
      - AMQP_PORT=5672
      - AGORA_HOST=core
      - AGORA_PORT=80
      - GRAPH_THROTTLING=10000
      - COLLECT_THROTTLING=10000
      - DB_HOST=redis
      - DB_DB=13
      - MIN_CACHE_TIME=1000
      - PASS_THRESHOLD=0.01
      - FRAGMENT_MIN_SYNC_TIME=10
      - EXCHANGE_NAME=stoa
      - QUEUE_NAME=scholar_requests
      - TOPIC_PATTERN=scholar.request.*
      - RESPONSE_RK_PREFIX=scholar.response
      - MONGO_HOST=mongo
      - MONGO_DB=scholar
    networks:
      - agora-network


  fragments:
    image: smartdeveloperhub/agora-fragments
    environment:
      - API_PORT=5006
      - BROKER_HOST=rabbit
      - BROKER_PORT=5672
      - AGORA_HOST=core
      - AGORA_PORT=80
      - EXCHANGE_NAME=stoa
      - TOPIC_PATTERN=scholar.request
      - RESPONSE_PREFIX=scholar.response
    networks:
      - agora-network

  nginx:
    build: ./nginx
    ports:
      - "9002:80"
    networks:
      - agora-network

networks:
  agora-network:
    driver: bridge
  
volumes:
  core-data:
    driver: local
  redis-data:
    driver: local
  scholar-data:
    driver: local
